import logging

from rest_framework.permissions import BasePermission
from django.contrib.auth import get_user_model
from utils.jwt_helpers import verify_token

logger = logging.getLogger(__name__)
User = get_user_model()


class IsJwtAuthenticated(BasePermission):
    """
    has a valid jwt generated by base project
    """

    def has_permission(self, request, view):
        token = request.META.get("HTTP_AUTHORIZATION") 
        if not token or not token.startswith("Bearer "):
            return False
        token = token.split(" ")[1]  # Extract the token part after "Bearer "
        verified, data = verify_token(token)
        if not verified:
            return False
        try:
            user = User.objects.get(id=data["user_id"])
        except User.DoesNotExist:
            return False

        # âœ… attach real user to request
        request.user = user
        return True